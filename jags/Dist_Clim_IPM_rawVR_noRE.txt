model{

###R survey timing or count type not in here yet

#  Informative intercepts for survival and recreuitment
	meanS <- logit(mean.s)
	muS ~ dnorm(meanS, 100)
	meanR <- logit(mean.r)
	muR ~ dnorm(meanR, 100)
	

# Offset for survey timing - recruitment
	offset ~ dnorm(0, 0.1) 
	
# Count type offsets
beta.type.otc.r ~ dnorm(0, 0.1) 
beta.type.osc.r ~ dnorm(0, 0.1)
beta.type.mnka.r ~ dnorm(0, 0.1)
	
# LP priors
##informative
  beta.dist.s  ~ dnorm(prior.dist.s.mean, prior.dist.s.tau)
	beta.snow.depth.s ~ dnorm(prior.snow.depth.s.mean, prior.snow.depth.s.tau)
	beta.start.spring.s ~ dnorm(prior.start.spring.s.mean, prior.start.spring.s.tau)
	beta.warm.dry.summer.s ~ dnorm(prior.warm.dry.summer.s.mean, prior.warm.dry.summer.s.tau)
	beta.rain.on.snow.s ~ dnorm(prior.rain.on.snow.s.mean, prior.rain.on.snow.s.tau)

  beta.dist.r  ~ dnorm(prior.dist.r.mean, prior.dist.r.tau)
	beta.snow.depth.r ~ dnorm(prior.snow.depth.r.mean, prior.snow.depth.r.tau)
	beta.start.spring.r ~ dnorm(prior.start.spring.r.mean, prior.start.spring.r.tau)
	beta.warm.dry.summer.r ~ dnorm(prior.warm.dry.summer.r.mean, prior.warm.dry.summer.r.tau)
	beta.rain.on.snow.r ~ dnorm(prior.rain.on.snow.r.mean, prior.rain.on.snow.r.tau)

	
# Linear predictors for survival and recruitment
	for(h in 1:nherd){
		for(yr in 1:nyr){
			
			logit(s.daily[h,yr]) <- muS + # intercept (baseline survival)
				beta.dist.s*dist[h,yr]+
								beta.snow.depth.s*snow.depth[h,yr] + 
												beta.start.spring.s*start.spring[h,yr]+
												    beta.warm.dry.summer.s*warm.dry.summer[h,yr]+
												        beta.rain.on.snow.s*rain.on.snow[h,yr]
				
			logit(R[h,yr]) <- muR + # intercept (baseline recruitment) 
				offset*month_offset[h,yr]  +
				beta.dist.r*dist[h,yr]+
								beta.snow.depth.r*snow.depth[h,yr] + 
												beta.start.spring.r*start.spring[h,yr]+
												    beta.warm.dry.summer.r*warm.dry.summer[h,yr]+
												        beta.rain.on.snow.r*rain.on.snow[h,yr]+
												    beta.type.otc.r*count.otc[h,yr] + 
												        beta.type.osc.r*count.osc[h,yr] + 
												            beta.type.mnka.r*count.mnka[h,yr]

			}
			}


# s.daily to annual survival
	for(h in 1:nherd){
		for(yr in 1:nyr){
		S[h,yr] <- pow(s.daily[h,yr], 365)
		}}


# Sightability for herds/year without sightability
	for(sg in 1:nsight_grp){	
		p_logit[sg] ~ dnorm(mean_grp_p[sg], mean_grp_ptau[sg])T(0, 1) # 0 - 1
		p_mu[sg] <- logit(p_logit[sg]) # -Inf - Inf
	}
		
# Linear predictor for sightability
	#  p is only used in observation model for surveys that *do not* have their own
	#   sightability estimate
	for(h in 1:nherd){	
		for(yr in first[h]:nyr){
			logit(p[h, yr]) <- p_mu[sight_grp[h]]
		}
	}

# Sex ratio
	for(h in 1:nherd){	
		for(yr in first[h]:nyr){
			sexratio[h,yr] ~ dnorm(meansr[1,1], meansr[1,2])T(0,1)
			}
		}
		
		
# First year population size
	for(h in 1:nherd){	

		N[h,first[h],1] ~ dpois(n1[h,1])
		N[h,first[h],2] ~ dpois(n1[h,2])
		
		totCalves[h,first[h]] <- N[h,first[h],1] 
		totAdults[h,first[h]] <- N[h,first[h],2] 
		totN[h,first[h]] <- totCalves[h,first[h]] + totAdults[h,first[h]]

		#  Apply sex ratio to get full population size
		totAdultsMF[h,first[h]] <- totAdults[h,first[h]]/sexratio[h,first[h]]
		totCalvesMF[h,first[h]] <- totCalves[h,first[h]]/0.5
		totNMF[h,first[h]] <- totAdultsMF[h,first[h]] + totCalvesMF[h,first[h]] 

		lambda[h,first[h]] <- 1
		#R.ad[h,first[h]] <- 0.1
		R_adj[h,first[h]] <- 0.1
		
		adj_totNMF[h,first[h]] <- totNMF[h,first[h]]
		
		adj_N1[h,first[h]] <- N[h,first[h],1]
		adj_N2[h,first[h]] <- N[h,first[h],2]
		}
		

	##########################################################################
#  Process model - multiple herds, 2 ages

	for(h in 1:nherd){	
		for(yr in (first[h]+1):nyr){
				
			# Calves: Poisson, dpois(lambda) where lambda >= 0
			N[h,yr,1] ~ dpois((totAdultsMF[h,yr] * R[h,yr]) * 0.5)

			#  SubAdults and Adults: Binomial, dbin(p,n), 0 < p < 1 and n â‰¥ 1
			N[h,yr,2] ~ dbin(S[h,yr-1], (N[h,yr-1,2] + N[h,yr-1,1]))

			#  Totals in each year - females only
			totCalves[h,yr] <- N[h,yr,1] 
			totAdults[h,yr] <- N[h,yr,2] 
			totN[h,yr] <- totCalves[h,yr] + totAdults[h,yr]

			#  Apply sex ratio to get full population size
			totAdultsMF[h,yr] <- totAdults[h,yr]/sexratio[h,yr]
			totCalvesMF[h,yr] <- totCalves[h,yr]/0.5
			totNMF[h,yr] <- totAdultsMF[h,yr] + totCalvesMF[h,yr]

		
		# Derived parameters
		# adult R
		#R.ad[h,yr] <- ifelse(adj_N2[h,yr-1]<5, 0, adj_N1[h,yr] /(adj_N2[h,yr-1] * S[h,yr-1]))
		logit(R_adj[h,yr]) <- logit(R[h,yr]) - offset*month_offset[h,yr]
		
		# Adjust totNMF for very small population 
		adj_totNMF[h,yr] <- ifelse(totNMF[h,yr]<1, 0, totNMF[h,yr])
	
		# Lambda
		lambda[h,yr] <- (adj_totNMF[h,yr] + 0.001)/abs(adj_totNMF[h,yr-1] + 0.001)
		}
	}
		
		
	##########################################################################
	#  Observation Models
	#  Indexing/columns of data inputs:
	#  Herd, Year, Age, Sex, Mean, Tau (we only have Sex 1)

	#  Survey observations -- counts indicate survey counts that **have** a sightability value
	for(i in 1:nc) {
	  sight_est[i] ~ dnorm(pdat[i,5], pdat[i,6])T(0,1)
	  cdat[i,5] ~ dbin(sight_est[i], round(totNMF[cdat[i,1], cdat[i,2]]))
	}
	
	# Estimate observations (herd-years that don't have sightability)
	for(i in 1:ne){
    edat[i,5] ~ dbin(p[edat[i,1], edat[i,2]], round(totNMF[edat[i,1], edat[i,2]]))
	}

	#  Survival Observations 
	# sdat contains event==deaths, and trials=days monitored, so outcome is daily mortality (I.e. 1-daily survival)
	# here we want s.daily to be in terms of daily survival, so we get sdat(mortality) using 1-daily s
	for(i in 1:ns){
		sdat[i,3] ~ dbin((1-s.daily[sdat[i,1], sdat[i,2]]), sdat[i,4])
		#s.daily[h,yr]
	}

	#  Recruitment Observations
	for(i in 1:nr){
		rdat[i,3] ~ dbin(R[rdat[i,1], rdat[i,2]], rdat[i,4])
		#R[h,yr]
	}
		
	# Sex ratio
	for(i in 1:nsr){
		srdat[i,3] ~ dnorm(sexratio[srdat[i,1], srdat[i,2]], srdat[i,4])T(0,1)
		#sexratio[h,yr]
	}


	
	
}   